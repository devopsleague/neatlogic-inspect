<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="codedriver.module.inspect.dao.mapper.InspectConfigFileMapper">

    <resultMap id="inspectResourceMap" type="codedriver.framework.inspect.dto.InspectResourceVo">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="abbr_name" property="abbrName"/>
        <result column="type_id" property="typeId"/>
        <result column="type_name" property="typeName"/>
        <result column="type_label" property="typeLabel"/>
        <result column="maintenance_window" property="maintenanceWindow"/>
        <result column="description" property="description"/>
        <result column="network_area" property="networkArea"/>
        <result column="port" property="port"/>
        <result column="ip" property="ip"/>
        <result column="state_id" property="stateId"/>
        <result column="state_name" property="stateName"/>
        <result column="datacenter_id" property="dataCenterId"/>
        <result column="datacenter_name" property="dataCenterName"/>
        <result column="env_id" property="envId"/>
        <result column="env_name" property="envName"/>
        <result column="app_module_id" property="appModuleId"/>
        <result column="app_module_name" property="appModuleName"/>
        <result column="app_module_abbr_name" property="appModuleAbbrName"/>
        <result column="app_system_id" property="appSystemId"/>
        <result column="app_system_name" property="appSystemName"/>
        <result column="app_system_abbr_name" property="appSystemAbbrName"/>
        <result column="cluster_id" property="clusterId"/>
        <result column="cluster_name" property="clusterName"/>
        <result column="cluster_type_id" property="clusterTypeId"/>
        <collection property="bgList" ofType="codedriver.framework.cmdb.dto.resourcecenter.BgVo">
            <id column="bg_id" property="bgId"/>
            <result column="bg_name" property="bgName"/>
        </collection>
        <collection property="ownerList" ofType="codedriver.framework.cmdb.dto.resourcecenter.OwnerVo">
            <id column="user_id" property="userId"/>
            <result column="user_uuid" property="uuid"/>
            <result column="user_name" property="userName"/>
        </collection>
        <collection property="allIp" ofType="codedriver.framework.cmdb.dto.resourcecenter.IpVo">
            <id column="allip_id" property="id"/>
            <result column="allip_ip" property="ip"/>
            <result column="allip_label" property="label"/>
        </collection>
    </resultMap>

    <sql id="resource_inspect_autoexec_job_from_join">
        FROM @{DATA_SCHEMA}.`scence_ipobject_detail` a
        left join cmdb_resourcecenter_resource_account b on b.resource_id=a.id
        left join cmdb_resourcecenter_account c on c.id=b.account_id
        left join cmdb_resourcecenter_resource_tag d on d.resource_id = a.id
        left join autoexec_job_resource_inspect e on e.resource_id=a.id
        left join autoexec_job_phase_node f on f.job_phase_id =e.phase_id AND f.resource_id = a.id
    </sql>

    <sql id="resource_inspect_autoexec_job_where">
        AND a.`type_id` IN
        ( SELECT a.`id` FROM `cmdb_ci` a WHERE a.lft &gt;= #{lft} AND a.rht &lt;= #{rht})
        <if test="stateIdList != null and stateIdList.size() > 0">
            AND a.`state_id` IN
            <foreach collection="stateIdList" item="stateId" open="(" separator="," close=")">
                #{stateId}
            </foreach>
        </if>
        <if test="envIdList != null and envIdList.size() > 0">
            AND a.`env_id` IN
            <foreach collection="envIdList" item="envId" open="(" separator="," close=")">
                #{envId}
            </foreach>
        </if>
        <if test="appSystemIdList != null and appSystemIdList.size() > 0">
            AND a.`app_system_id` IN
            <foreach collection="appSystemIdList" item="appSystemId" open="(" separator="," close=")">
                #{appSystemId}
            </foreach>
        </if>
        <if test="appModuleIdList != null and appModuleIdList.size() > 0">
            AND a.`app_module_id` IN
            <foreach collection="appModuleIdList" item="appModuleId" open="(" separator="," close=")">
                #{appModuleId}
            </foreach>
        </if>
        <if test="inspectStatusList != null and inspectStatusList.size() > 0">
            AND a.`inspect_status` IN
            <foreach collection="inspectStatusList" item="inspectStatus" open="(" separator="," close=")">
                #{inspectStatus}
            </foreach>
        </if>
        <if test="inspectJobPhaseNodeStatusList != null and inspectJobPhaseNodeStatusList.size() > 0">
            AND f.`status` IN
            <foreach collection="inspectJobPhaseNodeStatusList" item="inspectJobPhaseNodeStatus" open="("
                     separator="," close=")">
                #{inspectJobPhaseNodeStatus}
            </foreach>
        </if>
        <if test="protocolIdList != null and protocolIdList.size() > 0">
            AND c.`protocol_id` IN
            <foreach collection="protocolIdList" item="protocolId" open="("
                     separator="," close=")">
                #{protocolId}
            </foreach>
        </if>
        <if test="tagIdList != null and tagIdList.size() > 0">
            AND d.`tag_id` IN
            <foreach collection="tagIdList" item="tagId" open="("
                     separator="," close=")">
                #{tagId}
            </foreach>
        </if>
        <if test="searchValueList != null and searchValueList.size() > 0 and searchField != null and searchField != ''">
            <if test="searchField == 'name'">
                and a.`name` IN
            </if>
            <if test="searchField == 'ip'">
                and a.`ip` IN
            </if>
            <foreach collection="searchValueList" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
    </sql>

    <select id="getInspectResourceCount" resultType="int">
        SELECT COUNT(DISTINCT (a.`id`))
        <include refid="resource_inspect_autoexec_job_from_join"/>
        <where>
            <if test="keyword != null and keyword != ''">
                AND (a.`name` LIKE CONCAT('%', #{keyword}, '%') OR a.`ip` LIKE CONCAT('%', #{keyword}, '%'))
            </if>
            <include refid="resource_inspect_autoexec_job_where"/>
        </where>
    </select>

    <select id="getInspectResourceIdList" resultType="java.lang.Long">
        SELECT m.`id` FROM (
        SELECT distinct a.`id`, g.`last_change_time`
        <include refid="resource_inspect_autoexec_job_from_join"/>
        LEFT JOIN `inspect_config_file_last_change_time` g on g.`resource_id` = a.`id`
        <where>
            <if test="keyword != null and keyword != ''">
                AND (a.`name` LIKE CONCAT('%', #{keyword}, '%') OR a.`ip` LIKE CONCAT('%', #{keyword}, '%'))
            </if>
            <include refid="resource_inspect_autoexec_job_where"/>
        </where>
        ORDER BY g.`last_change_time` DESC, a.`id` ASC
        LIMIT #{startNum}, #{pageSize}
        ) m
    </select>

    <select id="getInspectResourceListByIdList" parameterType="java.lang.Long" resultMap="inspectResourceMap">
        SELECT
        a.`id`,
        a.`ip`,
        a.`port`,
        a.`type_id`,
        a.`type_name`,
        a.`type_label`,
        a.`name`,
        a.`network_area`,
        a.`maintenance_window`,
        a.`description`,
        a.`app_module_id`,
        a.`app_module_name`,
        a.`app_module_abbr_name`,
        a.`app_system_id`,
        a.`app_system_name`,
        a.`app_system_abbr_name`,
        a.`allip_id`,
        a.`allip_ip`,
        a.`allip_label`,
        a.`bg_id`,
        a.`bg_name`,
        a.`user_id`,
        a.`user_uuid`,
        a.`user_name`,
        a.`state_id`,
        a.`state_name`,
        a.`state_label`,
        a.`env_id`,
        a.`env_name`
        FROM @{DATA_SCHEMA}.`scence_ipobject_detail` a
        WHERE a.`id` IN
        <foreach collection="list" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <select id="getInspectConfigFilePathById" parameterType="java.lang.Long" resultType="codedriver.framework.inspect.dto.InspectConfigFilePathVo">
        SELECT
            `id`,
            `resource_id` AS resourceId,
            `path`,
            `md5`,
            `inspect_time` AS inspectTime,
            `file_id` AS fileId
        FROM `inspect_config_file_path`
        WHERE `id` = #{value}
    </select>

    <select id="getInspectConfigFilePathListByResourceId" parameterType="java.lang.Long" resultType="codedriver.framework.inspect.dto.InspectConfigFilePathVo">
        SELECT
            `id`,
            `resource_id` AS resourceId,
            `path`,
            `md5`,
            `inspect_time` AS inspectTime,
            `file_id` AS fileId
        FROM `inspect_config_file_path`
        WHERE `resource_id` = #{value}
    </select>

    <select id="getInspectConfigFilePathListByResourceIdList" parameterType="java.lang.Long" resultType="codedriver.framework.inspect.dto.InspectConfigFilePathVo">
        SELECT
            `id`,
            `resource_id` AS resourceId,
            `path`,
            `md5`,
            `inspect_time` AS inspectTime,
            `file_id` AS fileId
        FROM `inspect_config_file_path`
        WHERE `resource_id` IN
        <foreach collection="list" item="resourceId" open="(" separator="," close=")">
            #{resourceId}
        </foreach>
    </select>

    <select id="getInspectConfigFileLastChangeTimeListByResourceIdList" parameterType="java.lang.Long" resultType="codedriver.framework.inspect.dto.InspectConfigFilePathVo">
        SELECT
            `resource_id` AS resourceId,
            MAX(`inspect_time`) AS inspectTime
        FROM `inspect_config_file_path`
        WHERE `inspect_time` IS NOT NULL
          AND `resource_id` IN
        <foreach collection="list" item="resourceId" open="(" separator="," close=")">
            #{resourceId}
        </foreach>
        GROUP BY `resource_id`
    </select>

    <select id="getInspectConfigFileVersionListByPathIdList" parameterType="java.lang.Long" resultType="codedriver.framework.inspect.dto.InspectConfigFileVersionVo">
        SELECT
            `id`,
            `md5`,
            `inspect_time` AS inspectTime,
            `file_id` AS fileId,
            `audit_id` AS auditId,
            `path_id` AS pathId
        FROM `inspect_config_file_version`
        WHERE `path_id` IN
        <foreach collection="list" item="pathId" open="(" separator="," close=")">
            #{pathId}
        </foreach>
    </select>

    <select id="getInspectConfigFileAuditCountByPathId" parameterType="java.lang.Long" resultType="int">
        SELECT
            COUNT(1)
        FROM `inspect_config_file_audit`
        WHERE `path_id` = #{value}
    </select>

    <select id="getInspectConfigFileAuditIdListByPathId" parameterType="codedriver.framework.inspect.dto.InspectConfigFileAuditVo" resultType="java.lang.Long">
        SELECT
            `id`
        FROM `inspect_config_file_audit`
        WHERE `path_id` = #{pathId}
        ORDER BY `id` DESC
        LIMIT #{startNum}, #{pageSize}
    </select>

    <select id="getInspectConfigFileAuditListByIdList" parameterType="java.lang.Long" resultType="codedriver.framework.inspect.dto.InspectConfigFileAuditVo">
        SELECT
            a.`id`,
            a.`inspect_time` AS inspectTime,
            a.`path_id` AS pathId,
            b.`id` AS versionId
        FROM `inspect_config_file_audit` a
        LEFT JOIN `inspect_config_file_version` b on b.`audit_id` = a.`id`
        WHERE a.`id` IN
        <foreach collection="list" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        ORDER BY a.`id` DESC
    </select>

    <select id="getInspectConfigFileVersionCountByPathId" parameterType="java.lang.Long" resultType="int">
        SELECT
            COUNT(1)
        FROM `inspect_config_file_version`
        WHERE `path_id` = #{value}
    </select>

    <select id="getInspectConfigFileVersionCountByPathIdList" parameterType="java.lang.Long" resultType="codedriver.framework.inspect.dto.InspectConfigFilePathVo">
        SELECT
        `path_id` AS id,
        COUNT(1) AS versionCount
        FROM `inspect_config_file_version`
        WHERE `path_id` IN
        <foreach collection="list" item="pathId" open="(" separator="," close=")">
            #{pathId}
        </foreach>
        GROUP BY `path_id`
    </select>

    <select id="getInspectConfigFileVersionIdListByPathId" parameterType="codedriver.framework.inspect.dto.InspectConfigFileVersionVo" resultType="java.lang.Long">
        SELECT
            `id`
        FROM `inspect_config_file_version`
        WHERE `path_id` = #{pathId}
        ORDER BY `id` DESC
        LIMIT #{startNum}, #{pageSize}
    </select>

    <select id="getInspectConfigFileVersionListByIdList" parameterType="java.lang.Long" resultType="codedriver.framework.inspect.dto.InspectConfigFileVersionVo">
        SELECT
        `id`,
        `md5`,
        `inspect_time` AS inspectTime,
        `file_id` AS fileId,
        `audit_id` AS auditId,
        `path_id` AS pathId
        FROM `inspect_config_file_version`
        WHERE `id` IN
        <foreach collection="list" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        ORDER BY `id` DESC
    </select>

    <select id="getInspectConfigFileVersionById" parameterType="java.lang.Long" resultType="codedriver.framework.inspect.dto.InspectConfigFileVersionVo">
        SELECT
        `id`,
        `md5`,
        `inspect_time` AS inspectTime,
        `file_id` AS fileId,
        `audit_id` AS auditId,
        `path_id` AS pathId
        FROM `inspect_config_file_version`
        WHERE `id` = #{value}
    </select>

    <select id="getInspectConfigFilePathCount" parameterType="codedriver.framework.inspect.dto.InspectConfigFilePathSearchVo" resultType="int">
        SELECT
        COUNT(1)
        FROM `inspect_config_file_path` a
        LEFT JOIN @{DATA_SCHEMA}.`scence_ipobject_ip_port` b ON b.`id` = a.`resource_id`
        <where>
            <if test="keyword != null and keyword != ''">
                AND (a.`path` LIKE CONCAT('%', #{keyword}, '%')
                OR b.`name` LIKE CONCAT('%', #{keyword}, '%')
                OR b.`ip` LIKE CONCAT('%', #{keyword}, '%')
                )
            </if>
            <if test="timeRange != null">
                <if test="timeRange.size() > 0">
                    AND a.`inspect_time` &gt;= STR_TO_DATE(#{timeRange[0]}, '%Y-%m-%d %H:%i:%s')
                </if>
                <if test="timeRange.size() > 1">
                    AND a.`inspect_time` &lt;= STR_TO_DATE(#{timeRange[1]}, '%Y-%m-%d %H:%i:%s')
                </if>
            </if>
        </where>
    </select>

    <select id="getInspectConfigFilePathList" parameterType="codedriver.framework.inspect.dto.InspectConfigFilePathSearchVo" resultType="codedriver.framework.inspect.dto.InspectConfigFilePathVo">
        SELECT
        a.`id`,
        a.`resource_id` AS resourceId,
        a.`path`,
        a.`inspect_time` AS inspectTime,
        b.`name` AS resourceName,
        b.`ip` AS resourceIP,
        b.`port`  AS resourcePort,
        b.`type_label`  AS resourceTypeLabel
        FROM `inspect_config_file_path` a
        JOIN @{DATA_SCHEMA}.`scence_ipobject_ip_port` b ON b.`id` = a.`resource_id`
        <where>
            <if test="keyword != null and keyword != ''">
            AND (a.`path` LIKE CONCAT('%', #{keyword}, '%')
                     OR b.`name` LIKE CONCAT('%', #{keyword}, '%')
                     OR b.`ip` LIKE CONCAT('%', #{keyword}, '%')
                )
            </if>
            <if test="timeRange != null">
                <if test="timeRange.size() > 0">
                    AND a.`inspect_time` &gt;= STR_TO_DATE(#{timeRange[0]}, '%Y-%m-%d %H:%i:%s')
                </if>
                <if test="timeRange.size() > 1">
                    AND a.`inspect_time` &lt;= STR_TO_DATE(#{timeRange[1]}, '%Y-%m-%d %H:%i:%s')
                </if>
            </if>
        </where>
        ORDER BY a.`inspect_time` desc
        LIMIT #{startNum}, #{pageSize}
    </select>

    <insert id="insertInspectConfigFilePath" parameterType="codedriver.framework.inspect.dto.InspectConfigFilePathVo">
        INSERT INTO `inspect_config_file_path` (
            `id`,
            `resource_id`,
            `path`
        )
        VALUES
        (
            #{id},
            #{resourceId},
            #{path}
        )
    </insert>

    <insert id="insertInspectConfigFileAudit" parameterType="codedriver.framework.inspect.dto.InspectConfigFileAuditVo">
        INSERT INTO `inspect_config_file_audit` (
            `id`,
            `inspect_time`,
            `path_id`
        )
        VALUES
        (
            #{id},
            #{inspectTime},
            #{pathId}
        )
    </insert>

    <insert id="insertInspectConfigFileVersion" parameterType="codedriver.framework.inspect.dto.InspectConfigFileVersionVo">
        INSERT INTO `inspect_config_file_version` (
            `id`,
            `md5`,
            `inspect_time`,
            `file_id`,
            `audit_id`,
            `path_id`
        )
        VALUES
        (
            #{id},
            #{md5},
            #{inspectTime},
            #{fileId},
            #{auditId},
            #{pathId}
        )
    </insert>

    <insert id="insertInspectConfigFileLastChangeTime">
        INSERT INTO `inspect_config_file_last_change_time` (
            `resource_id`,
            `last_change_time`
        )
        VALUES
        (
            #{resourceId},
            #{lastChangeTime}
        ) ON DUPLICATE KEY UPDATE
        `last_change_time` = IF(`last_change_time` &lt; #{lastChangeTime}, #{lastChangeTime}, `last_change_time`)
    </insert>

    <update id="updateInspectConfigFilePath" parameterType="codedriver.framework.inspect.dto.InspectConfigFilePathVo">
        UPDATE `inspect_config_file_path`
        SET
            `md5` = #{md5},
            `inspect_time` = #{inspectTime},
            `file_id` = #{fileId}
        WHERE `id` = #{id}
    </update>

    <update id="resetInspectConfigFilePathFileInfoByIdList" parameterType="java.lang.Long">
        UPDATE `inspect_config_file_path`
        SET
            `md5` = null,
            `inspect_time` = null,
            `file_id` = null
        WHERE `id` IN
        <foreach collection="list" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <delete id="deleteInspectConfigFilePathByResourceId" parameterType="java.lang.Long">
        DELETE FROM `inspect_config_file_path`
        WHERE `resource_id` = #{value}
    </delete>

    <delete id="deleteInspectConfigFilePathById" parameterType="java.lang.Long">
        DELETE FROM `inspect_config_file_path`
        WHERE `id` = #{value}
    </delete>

    <delete id="deleteInspectConfigFileVersionByPathIdList" parameterType="java.lang.Long">
        DELETE FROM `inspect_config_file_version`
        WHERE `path_id` IN
        <foreach collection="list" item="pathId" open="(" separator="," close=")">
            #{pathId}
        </foreach>
    </delete>

    <delete id="deleteInspectConfigFileVersionByPathIdAndLEId" parameterType="codedriver.framework.inspect.dto.InspectConfigFileVersionVo">
        DELETE FROM `inspect_config_file_version`
        WHERE `path_id` = #{pathId}
        AND `id` &lt;= #{id}
    </delete>

    <delete id="deleteInspectConfigFileAuditByPathIdList" parameterType="java.lang.Long">
        DELETE FROM `inspect_config_file_audit`
        WHERE `path_id` IN
        <foreach collection="list" item="pathId" open="(" separator="," close=")">
            #{pathId}
        </foreach>
    </delete>

    <delete id="deleteInspectConfigFileAuditByPathIdAndLEInspectTime" parameterType="codedriver.framework.inspect.dto.InspectConfigFileAuditVo">
        DELETE FROM `inspect_config_file_audit`
        WHERE `path_id` = #{pathId}
        AND `inspect_time` &lt;= #{inspectTime}
    </delete>
</mapper>

